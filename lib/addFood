
import 'package:flutter/material.dart';
import 'savedDiet.dart';
import 'appBar.dart';
void main() => runApp(PersonalForm());
class PersonalForm extends StatefulWidget {
  @override
  _PersonalForm createState() => _PersonalForm();
}

class _PersonalForm extends State<PersonalForm> {

  final _carboController = TextEditingController();
  final _proController = TextEditingController();
  final _fatController = TextEditingController();
  final _ulController = TextEditingController();
  final GlobalKey<FormState> _formKey = GlobalKey<FormState>()
  int _selValue = 1;

  @override
  void dispose() {
    _carboController.dispose();
    _proController.dispose();
    _fatController.dispose();
    _ulController.dispose();
    //_purposeController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return GestureDetector(
        onTap: () {
          FocusScopeNode currentFocus = FocusScope.of(context);
          currentFocus.unfocus();
        },
        child: MaterialApp(
            title: "Add Food",
            home: Scaffold(
              resizeToAvoidBottomPadding: false,
              appBar: basicAppBar('Add Food'),
              body: Center(
                  child: Form(
                    key: _formKey,
                    child: Column(
                      // crossAxisAlignment: CrossAxisAlignment.center,
                      // mainAxisSize: MainAxisSize.min,
                      mainAxisAlignment: MainAxisAlignment.center,

                      children: [
                        // Spacer(
                        //   flex: 1,
                        // ),
                        subBuilderQuestion("탄수화물", "g",
                            controller: _carboController,
                            icon: Icon(Icons.favorite)),
                        subBuilderQuestion("단백질", "g",
                            controller: _proController,
                            icon: Icon(Icons.restaurant_menu_outlined)),
                        subBuilderQuestion("지방", "g",
                            controller: _fatController,
                            icon: Icon(Icons.restaurant_outlined)),
                        subBuilderQuestion("열량?", "g",
                            controller: _ulController,
                            icon: Icon(Icons.restaurant_menu_sharp)),
                        Spacer(
                          flex: 1,
                        ),
                        // Container(
                        //   child: RaisedButton(
                        //     shape: RoundedRectangleBorder(
                        //         borderRadius: BorderRadius.circular(18.0),
                        //         side: BorderSide(color: Colors.white)),
                        //     color: Colors.blue[600],
                        //     onPressed: () {
                        //       if (_formKey.currentState.validate()) {
                        //         //db 저장
                        //         Navigator.pushNamed(context, '/saving');
                        //       }
                        //     },
                        //     child: Text(
                        //       "제출",
                        //       style: TextStyle(color: Colors.white),
                        //     ),
                        //   ),
                        // ),
                        Spacer(
                          flex: 3,
                        ),
                      ],
                    ),
                  )),
              floatingActionButton: FloatingActionButton(
                child: Icon(Icons.done),
                onPressed: () {
                  if (_formKey.currentState.validate()) {
                    Navigator.pushNamed(context, '/saving');
                  }

                },
              ),
            )));
  }

  Widget subBuilderQuestion(var question, var unit,
      {var controller, var icon}) {
    return Expanded(
        flex: 1,
        child: Center(
            child: Row(
              children: [
                Spacer(
                  flex: 1,
                ),
                spacer_icon(icon: icon),
                spacer_question(question),
                Expanded(flex: 6, child: questionForm(controller)),
                spacer_unit(unit),
                Spacer(
                  flex: 1,
                ),
              ],
            )));
  }

  Widget subBuilderPurpose(var question, {var icon}) {
    return Expanded(
        flex: 1,
        child: Center(
            child: Row(
              children: [
                Spacer(
                  flex: 1,
                ),
                spacer_icon(icon: icon),
                spacer_question(question),
                Expanded(flex: 8, child: pruposeForm()),
                Spacer(
                  flex: 2,
                ),
              ],
            )));
  }

  Widget questionForm(TextEditingController controller) {
    return TextFormField(
      autofocus: false,
      controller: controller,
      keyboardType: TextInputType.number,
      decoration: const InputDecoration(hintText: ''),
      textAlign: TextAlign.center,
      validator: (value) {
        if (value.isEmpty) {
          return 'Please enter info';
        }
        return null;
      },
    );
  }

  Widget pruposeForm() {
    return DropdownButtonFormField(
      value: _selValue,
      items: _purposeList,
      decoration: InputDecoration(hintText: ""),
      validator: (value) {
        if (value > 3) {
          return 'Select Number 1-3';
        }
        return null;
      },
      onChanged: (value) {
        _selValue = value;
      },
      onSaved: (value) {
        print(value);
      },
    );
  }

  Widget spacer_icon({var icon}) {
    return Expanded(flex: 1, child: Center(child: icon));
  }

  Widget spacer_question(var question) {
    return Expanded(
        flex: 4,
        child: Center(
          child: Text(question),
        ));
  }

  Widget spacer_unit(var unit) {
    return Expanded(
        flex: 3,
        child: Center(
          child: Text(unit),
        ));
  }
}

class Saving extends StatelessWidget {
  @override
  Widget build(context) {
    return GestureDetector(
        child: Container(
            color: Colors.blue[300],
            child: Center(
              child: Text(
                "saving...",
                style: TextStyle(
                    color: Colors.white,
                    fontSize: 50,
                    decoration: TextDecoration.none),
              ),
            )),
        onTap: () => Navigator.pushNamed(context, '/savedDiet'));
  }
